{"version":3,"sources":["../../server/routes/events.js"],"names":["eventsRouter","express","Router","post","validateEventInput","req","res","body","then","timestamp","catch"],"mappings":";;;;;;AAAA;;;;AACA;;AAGA;;AAIA;;;;;;AAGA,IAAMA,eAAeC,kBAAQC,MAAR,EAArB;;AAGAF,aAAaG,IAAb,CAAkB,GAAlB,EAAuBC,8BAAvB,EAA2C,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvD;;AAEA,4BAAYD,IAAIE,IAAhB,EAAsBC,IAAtB,CAA2B,YAAM;AAC/B,6BAAaF,GAAb,EAAkB,GAAlB,eAAiCD,IAAIE,IAAJ,CAASE,SAA1C;AACD,GAFD,EAEGC,KAFH,CAES,YAAM;AACb;AACA,6BAAaJ,GAAb,EAAkB,GAAlB,EAAuB,IAAvB,EAA6B,uBAA7B;AACD,GALD;AAMD,CATD;;kBAYeN,Y","file":"events.js","sourcesContent":["import express from 'express';\nimport {\n  validateEventInput,\n} from '../helpers/validators';\nimport {\n  createEvent,\n} from '../crud/db-query';\n\nimport sendResponse from '../helpers/responses';\n\n\nconst eventsRouter = express.Router();\n\n\neventsRouter.post('/', validateEventInput, (req, res) => {\n  // query database\n\n  createEvent(req.body).then(() => {\n    sendResponse(res, 201, `event '${req.body.timestamp}' was successfully uploaded`);\n  }).catch(() => {\n    // console.log(e);\n    sendResponse(res, 500, null, 'Internal server error');\n  });\n});\n\n\nexport default eventsRouter;\n"]}